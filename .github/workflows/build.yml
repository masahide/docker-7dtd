name: Build Docker Image

on:
  push:
    branches:
    - master
    paths-ignore:
    - '**.md'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:

    - name: checkout
      uses: actions/checkout@v2

    - name: get latest version
      run: |
        docker -v
        LATEST_VER=$(docker run --rm cm2network/steamcmd ./steamcmd.sh +login anonymous +app_info_print 294420 +quit  | grep -A 1000 \"294420\" 2>/dev/null |grep -A 1000 \"branches\" |grep -A 1000 \"public\" | grep -B 10 \} --max-count=1 | grep \"buildid\" | cut -d\" -f4)
        echo $LATEST_VER
        echo "::set-env name=LATEST_VER::${LATEST_VER}"
        echo "::set-env name=VER::$(cat latest)"
    - name: build
      if: env.LATEST_VER != env.VER
      run: |
        echo ${{ env.LATEST_VER }} >latest
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Add changes" -a
    - name: push master
      if: env.LATEST_VER != env.VER
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: push master
      if: env.LATEST_VER != env.VER
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: build branch
      if: env.LATEST_VER != env.VER
      run: |
        echo ${{ env.LATEST_VER }} >latest
        git checkout -b ${{ env.LATEST_VER }}
    - name: push branch
      if: env.LATEST_VER != env.VER
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ env.LATEST_VER }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
